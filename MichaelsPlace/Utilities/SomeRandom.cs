using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading;
using System.Threading.Tasks;

namespace MichaelsPlace.Utilities
{
    public static class SomeRandom
    {
        private static readonly ThreadLocal<Random> _rng = new ThreadLocal<Random>(() => new Random());

        private const string Source =
            @"loremipsumdolorsitametconsecteturadipiscingelitpraesentsollicitudinnibheucursusconvallisurnaerosfermentumnullaegetcondimentumsemliberonontellusutpharetraauguenecultricesplaceratvivamuslaoreetnislnonligulaaccumsanquismattisdiamconsequatetiamtristiquemiiaculisegestashendreritlectusmagnablanditsapienacfringillametusvelitquisexproinnullaliberopulvinarvelipsumatinterdumdictumturpismorbiutfelismaurisfuscevitaeestvitaemiegestasaliquetproinvelhendreritnisimaurisvestibulumanteeuturpisfinibusquisportaipsumullamcorperphasellusmaximusorciquisrisusbibendumporttitornullaegetbibendumnuncinsitametsemettellusgravidafringillacurabiturmolestiemaximusleoutpellentesquesednullanequetemporsitametdiameufinibusaliquamorcivestibulumpellentesqueleovelmipellentesqueviverradonecidlaciniatortormaurissollicitudinligulanibheuhendreritaugueelementumsednuncinterdumfringillametusquisfringillapellentesqueconvalliscondimentummagnautvenenatisjustoduisaquamactortorluctuspretiumeuutliberoinconsecteturdolornonultricesaccumsannibhestconsequatpurussitametornarenisiliberoeuauguesedconsequatviverraipsumnondapibusarcublanditacrasantequamconsequatquisfermentumluctusfringillaatenimsuspendisseacmagnanecodioviverraullamcorpervivamusconvallistinciduntnequeattinciduntcrassemperleoarcusitametaliquamipsumsemperquisnullamactemporvelitvivamuscondimentumgravidatinciduntmorbiviverravitaeelitettemporutaccumsanorciauctorrutrumtinciduntnibhestrhoncustellusutsollicitudinmagnatellusvelnuncsedluctusmaximusviverrasedegetsemperestcrasvestibulumvariuseratdignissimpulvinarquamtinciduntegetphasellusvolutpatmetusligulasedullamcorpermetusportaidvivamusveltinciduntmaurissedbibendumsemduisutsemnullamorbivelmollissapiennuncacduitristiquemattisnisiidpharetraexduisvelmassaquisanteconguesodalesutatodiophasellusblanditcondimentummassaconsequatiaculisleovestibuluminorcivitaenunclobortisconguenonsitametnislphaselluselementumsemutorcidapibusvolutpatpraesentaccongueorcinonsagittisipsuminsedconvallisfelisnullafringillatemportortoretaliquampurusdictumnecintegerplacerataugueacerattempusetpellentesqueturpisfringillamorbicursusanibhutscelerisqueinrhoncusnisinonmaurisvehiculanonaliquettortorposuereetiamatvehiculaelitinfaucibusdolordonecfermentumligulaveltortorsodalesnecfacilisisenimplaceratloremipsumdolorsitametconsecteturadipiscingelitproinsagittisauguevitaetellussollicitudinnontinciduntfelishendreritnamfelisorcitempuseuplaceratacluctusinmassamaurisfermentumnullaipsumvelblanditrisusaliquetsitametcrasvitaepellentesqueestnonfacilisisurnanuncutplaceratquamdonecnondolorarcunamdictuminterdumfaucibusnullamaccumsannibhnuncegetfaucibusipsumfacilisisatcurabituregetduiplaceratconguelacusquissollicitudinfelisetiamacestsedmassaaliquetaliquamegetnecvelitaeneansemtortortinciduntatvulputateathendreritinmetusfuscemattisvelitquisdictumblanditerosmaurisaccumsanestaclaoreetsemlectusaexsedtemporfermentumrisusnecullamcorperleoefficiturataliquamauctorinelitacsagittissedpurusmieuismodconsecteturluctusnecconvallisacnisiduisultriciesportasemvitaefringillaloremipsumdolorsitametconsecteturadipiscingelitaeneansitametvulputatelacusquisquealiquamluctuselementumvivamusconguelaoreetpurusasemperinterdumetmalesuadafamesacanteipsumprimisinfaucibusnullametrisuselitquisqueacluctusmagnamaurisquismetusfaucibusmagnasodalesvenenatismauristempusscelerisquesuscipitfuscemaximustempusmauriseuluctussedatmaurisvitaevelitmollisfeugiatidanequefusceetdignissimlectuscurabiturlaoreetutnibhsitametmolestieduiscondimentumerateufeugiatposuerecrasacsapienfaucibuslorempellentesquemalesuadavelvitaeenimproinquisdolornuncquisqueporttitorenimacluctustemporcrasgravidaacenimsedvolutpatsediaculisanteavenenatisvolutpatpellentesquenonleoquismagnasodalesdictumutneceratetiametbibendumdiammaurisposuerebibendumnequeatconsequateroscursussedutelementumipsumsitametmagnamolestiesollicitudinpellentesquehabitantmorbitristiquesenectusetnetusetmalesuadafamesacturpisegestasproinorciesteuismodultricesenimeuvulputateullamcorperipsumnullavitaeurnasitametnullaplaceratlaoreetdonecconguepretiumelitacursusliberoegestasaaeneaniaculisconsequatnibhattinciduntantepharetranecsedinmassavolutpattincidunterosatemporurnaphasellusutmollisligulaegetinterdumnislaliquamsagittissodalesaugueacdignissimsuspendisselaciniavelitaauctordignissimmauristellusfeugiatenimegetegestasturpissapienegeterosineuantegravidaportaarcuidlobortisloremutincommodojustovestibulumsitametaliquetmetusetiamgravidaaugueacsapienegestaslaoreetnullamtinciduntdictumlacusvitaefringillaloremtinciduntegetdonecidlaciniatellusmaurisiaculislectusmetusidsuscipittellussuscipitetsedvariustemporsemperphasellusatliberoidmagnaornareauctornecegetlectusproinlectusfeliscondimentumnecbibendumegetlaciniasollicitudinnullainrisussapienblanditatvenenatiseuaccumsanaloremfuscegravidamianequevolutpatsedvestibulumnisiefficitursuspendisseimperdietalacusnecdignissimcumsociisnatoquepenatibusetmagnisdisparturientmontesnasceturridiculusmusutegetsapienetrisusvariusmolestiequisquisnisiquisquesodalesliberomagnaveldapibusnibhscelerisqueinmorbifeugiatlobortistellussedultricesnibhpellentesquevitaefinibustortorsedlaoreetfermentumjustosuspendisseantenibhsodalesluctusscelerisqueatlobortisetduinullafinibusleournainfeugiatelitcondimentumsitametquisqueeumaurisfacilisisduiviverramattis";

        public static string Id() => Guid.NewGuid().ToString("N");
        
        public static string String(int? length = null)
        {
            var realLength = length ?? _rng.Value.Next(1, 15);
            var index = _rng.Value.Next(0, Source.Length - realLength);
            return Source.Substring(index, realLength);
        }

        public static string Name(int? length = null)
        {
            var name = String(length);
            return name.Substring(0, 1).ToUpperInvariant() + name.Substring(1);
        }

        public static string EmailAddress() => $"{String()}@example.com";

        public static string PhoneNumber() => "555-" + _rng.Value.Next(100, 999) + "-" + _rng.Value.Next(1000, 9999);

        public static T RandomItem<T>(this IList<T> @this) => @this[_rng.Value.Next(0, @this.Count - 1)];
    }
}
